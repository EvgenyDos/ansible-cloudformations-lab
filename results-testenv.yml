---
  - name:
    hosts: "{{ vmhostip }}"
    gather_facts: true
    tasks:
#        command: "echo {{ postcheckpwd }} | passwd {{ studentname }} --stdin"
#      - command: "curl -fsSL https://goss.rocks/install -o /root/install"
#      - command: "chmod +rx /root/install"
#      - command: "/root/install"

      - shell: usermod -s /sbin/nologin {{ studentname }}

      - name: Reboot immediately.
        shell: "sleep 10 && reboot"
        async: 1
        poll: 0

      - name: Wait for the server to finish rebooting
        wait_for_connection:
          delay: 15
          sleep: 15
          timeout: 300

#      - name: Wait until SSH is available
#        wait_for:
#          host: '{{ vmhostip }}'
#          port: 22
#          delay: 30
#          state: started
#          timeout: 320
#        delegate_to: localhost

      - name: Download installer of goss
        get_url:
          url: "https://goss.rocks/install"
          dest: "/root/install"
          force: yes

      - shell: "chmod +x /root/install"
      - shell: "/root/install"

      - name: copy main config file
        copy:
          dest: /root/goss.yaml
          src: "files/goss.yaml"

      - name: copy main config file
        copy:
          dest: /root/goss-results.sh
          src: "files/goss-results.sh"

      - name: copy main config file
        copy:
          dest: /root/goss-ssh-results.sh
          src: "files/goss-ssh-results.sh"

      - shell: "/usr/local/bin/goss -g /root/goss.yaml validate --max-concurrent 1 --format tap"
        ignore_errors: True
        register: resultsoutput

#      - shell: "/usr/local/bin/goss -g /root/goss.yaml validate --format tap > results.yml"
#        ignore_errors: True
#      - shell: "/usr/local/bin/goss -g /root/goss.yaml validate --format tap > results-for-mail.yml"
#        ignore_errors: True

#      - shell: echo " StrictHostKeyChecking no" >> /root/.ssh/config

#      - shell: /root/goss-ssh-results.sh

#      - shell: ssh sshuser@localhost "id" > /root/results-ssh-access

      - shell: chmod +x /root/goss-results.sh

      - shell: chmod +x /root/goss-ssh-results.sh

      - shell: /root/goss-ssh-results.sh

      - shell: /root/goss-results.sh

#      - shell: ls -la /root/

#      - lineinfile:
#          path: /root/results-for-mail.txt
#          regexp: '^ok'
#          line: '<font color="green"> ok'

      - shell: cat /root/results.txt
        ignore_errors: True
        register: bodymailreport
        
      - name: send an email with results
        mail:
          subject: "Test results"
          to: "{{ adminemailnotifications }}"
          from: Li9 Exam <do-not-reply@li9.com>
          body: "{{ resultsoutput.stdout }}"
#          body: "{{ lookup('template', '{{ res }}') }}"
      

      - name: send an email with results
        mail:
          subject: "Test results"
          to: "{{ adminemailnotifications }}"
          from: Li9 Exam <do-not-reply@li9.com>
          body: "{{ bodymailreport.stdout }}"

      - name: send an email  to user that cloudformation is done
        mail:
          subject: "Your exam-time has been ended."
          to: "{{ useremailnotifications }}"
          from: Li9 Test <do-not-reply@li9.com>
          body: |
            Your exam-time has been ended.
            We will check the results of exam and contact with you soon.
            Thanks for your time and have a nice day.

#      - name: remove tower_host from our VM inventory
#        tower_host:
#          description: "remove VM ip from inventory"
#          name:  "{{ vmhostip }}"
#          inventory: "{{ playbookvminventoryname }}"
#          tower_verify_ssl: no
#          state: absent
