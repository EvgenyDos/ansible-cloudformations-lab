---
  - name:
    hosts: "{{ vmhostip }}"
    gather_facts: false
    tasks:

#      - debug:
#          msg: "our inventnmame {{ playbookvminventoryname }}"
#        when: testname == "linux"

###### experiment with rondom exams

      - name: copy files/rondomnumber.sh script
        copy:
          dest: "/root/rondomnumber.sh"
          src: "files/rondomnumber.sh"
          mode: u+rwx,g-wx,o-rwx
        when: testname == "linux"

      - name: create rondom name for lvm test
        shell: /root/rondomnumber.sh
        register: lvmtestnumber
        when: testname == "linux"

      - debug:
          msg: "lvmtestnumber is {{ lvmtestnumber.stdout }}"
        when: testname == "linux"

      - include_tasks: exams/lvm/{{ lvmtestnumber.stdout }}/postconfig.yml
#        vars:
#          wp_user: timmy
        when: testname == "linux"

###### end of expiriment

      - name: Ensure SSH warning banner is configured
        copy:
          dest: "/etc/issue.net"
          src: "files/issue.net"
        when: testname == "linux"

      - name: add lines
        lineinfile:
          dest: /etc/ssh/sshd_config
          line: 'Banner /etc/issue.net'
        when: testname == "linux"

      - name: restart sshd
        service:
          name: sshd
          state: restarted
        when: testname == "linux"

#      - name: list of commands for prepare tests
#        file:
#          state: directory
#          path: /data
#          owner: root
#          group: root
#        when: testname == "linux"

#      - name: creating /data/removeme
#        file:
#          state: touch
#          path: /data/removeme
#          state: touch
#          mode: "u+rwx,g+rwx,o+rwx"
#        when: testname == "linux"

#      - name: create file with chattr +i
#        shell: chattr +i /data/removeme
#        when: testname == "linux"
  
#      - name: enable additional repo for docker
#        shell: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
#        when: testname == "linux"

###      - name: Install a list of packages
###        yum:
###          name: "{{ packages }}"
###        vars:
###          packages:
###             - yum-utils
###             - device-mapper-persistent-data
###             - lvm2
#             - docker-ce
#             - docker-ce-cli
#             - containerd.io
        when: testname == "linux"

#      - name: restart sshd
#        service:
#          name: docker
#          state: restarted
#        when: testname == "linux"

      - name: press to link for exam start
        mail:
          subject: "Li9 exam - Linux system administration exam has been started"
          to: "{{ useremailnotifications }}"
          from: "{{ adminemailnotifications }}"
          subtype: html
          body: "{{ lookup('template', 'templates/mail.html.j2') }}"
        when: testname == "linux"

#### install ang configure asciinema recorder

      - name: Install epel packag
        yum:
          name: epel-release
          state: latest
        when: testname == "linux"

      - name: Install a asciinema package
        yum:
          name: asciinema
          state: latest
        when: testname == "linux"

      - name: create config dir
        shell: asciinema -h
        when: testname == "linux"

      - name: create config dir for student
        shell: su - student -c "asciinema -h"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/.config/asciinema/config
          src: "templates/asciinema.config"
        when: testname == "linux"

      - name: copy main config file
        copy:
          owner: student
          group: root
          dest: /home/student/.config/asciinema/config
          src: "templates/asciinema.config"
        when: testname == "linux"

      - name: add lines into basrc of user
        lineinfile:
          dest: /home/student/.bashrc
          line: '{{ item }}'
        with_items:
          - 'export LC_ALL=en_US.UTF-8'
          - 'if [[ -z $ASCIINEMA_REC ]]; then asciinema rec -q -y -t {{ useremailnotifications }}; fi'
        when: testname == "linux"

      - name: add lines into basrc of root
        lineinfile:
          dest: /root/.bashrc
          line: '{{ item }}'
        with_items:
          - 'export LC_ALL=en_US.UTF-8'
          - 'if [[ -z $ASCIINEMA_REC ]]; then asciinema rec -q -y -t {{ useremailnotifications }}; fi'
        when: testname == "linux"

      - name: Allow passwordless sudo
        lineinfile:
          dest: /etc/sudoers
          state: present
          line: 'student ALL=(ALL) NOPASSWD: ALL'
          validate: 'visudo -cf %s'
