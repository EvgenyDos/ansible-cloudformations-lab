---
  - name:
    hosts: localhost
    connection: local
    gather_facts: False
    vars_files:
    - group_vars/all.yml
    tasks:
      - name: send email that service is ordered
        mail:
         subject: "Deploy of test environment has been ordered"
         to: "{{ adminemailnotifications }}"
         from: Li9 Demo <do-not-reply@demo.li9.com>
         body: |
          Li9 Demo system will be deployed
          It will take ~ 10 mins
          Enjoy your demo environment
      - name: Deploy Dos ansible cloudformation stack
        cloudformation:
          stack_name: "{{ stack_name }}"
          state: "present"
          region: "{{ region_name }}"
          disable_rollback: true
          template: "files/li9-tests.template"
          template_parameters:
            KeyName: "{{ instancekeypair }}"
            EC2InstanceType: "{{ instancetype }}"
            User: "{{ studentname }}"
            Password: "{{ studentpwd }}"
            VolumeSize: "{{ disksize }}"
      - cloudformation_facts:
          stack_name: "{{ stack_name }}"
          region: "{{ region_name }}"
          all_facts: true
        register: my_stack

      - name: it is output of cloudformations instalation
        debug:
          msg: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs }}"

      - name: it is our VM ip
        debug:
          msg: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs.TestServerIp }}"

      - name:  recreate hosts file with IP of new vm
        replace:
          path: hosts
          regexp: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ansible_ssh_port=22'
          replace: '{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs.TestServerIp }} ansible_ssh_port=22'

      - name: sleep for "{{ sleeptime }}" seconds and continue with play
        wait_for: timeout="{{ sleeptime }}"
        delegate_to: localhost

      - name: adding tower_inventory with VM ip
        tower_inventory:
          description: test invent
          name: "{{ playbookvminventoryname }}"
          organization: Default

      - name: adding tower_host to our VM inventory
        tower_host:
          description: test host for invent
          name: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs.TestServerIp }}" 
          inventory: "{{ playbookvminventoryname }}"

      - name: send an email that cloudformation is done
        mail:
          subject: "Test environment is almost ready"
          to: "{{ useremailnotifications }}"
          from: Li9 Demo <do-not-reply@demo.li9.com>
          body: 'System has been successfully provisioned.'
#            Once it's ready you will receive a new email
#            The following information is important to connect to the service:
#            *) Hosts is accessible via ssh
#            *) SSH username: "{{ studentname }}"
#            *) SSH password: "{{ studentpwd }}"
#            *) ROOT access via "su -" with your password
#          Thank you
