---
  - name:
    hosts: localhost
    connection: local
    tasks:

      - name: Deploy Dos ansible cloudformation stack
        cloudformation:
          stack_name: "{{ stack_name }}"
          state: "present"
          region: "{{ region_name }}"
          disable_rollback: true
          template: "files/li9-tests.template"
          template_parameters:
            KeyName: "{{ instancekeypair }}"
            EC2InstanceType: "{{ instancetype }}"
            User: "{{ studentname }}"
            Password: "{{ studentpwd }}"
            VolumeSize: "{{ disksize }}"

      - name: we have to collect some facts from cloudformations stack
        cloudformation_facts:
          stack_name: "{{ stack_name }}"
          region: "{{ region_name }}"
          all_facts: true
        register: my_stack

      - name: it is output of cloudformations instalation
        debug:
          msg: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs }}"

      - name: it is our VM ip
        debug:
          msg: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs.TestServerIp }}"

      - name: adding tower_host to our VM inventory
        tower_host:
          description: "test host for invent"
          name: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs.TestServerIp }}"
          inventory: "{{ playbookvminventoryname }}"
          tower_verify_ssl: no
          state: present

      - name: "we will save VM server ip as a setstats param for the next staps"
        set_stats:
          data:
            vmhostip: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs.TestServerIp }}"

      - debug:
          msg: "our inventnmame {{ playbookvminventoryname }}"

      - name: Wait until SSH is available
        wait_for:
          host: "{{ my_stack.ansible_facts.cloudformation[stack_name].stack_outputs.TestServerIp }}"
          port: 22
          delay: 30
          timeout: 320
          state: started
        delegate_to: localhost
