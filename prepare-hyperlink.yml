---
- hosts: localhost
#  connection: local
#  become_user: apache
  gather_facts: false
#  become_method: su
  tasks:

      - shell: "whoami && w"

      - name: generate rondom name
        set_fact: rondomname="{{ 99999999999999999999999 | random | to_uuid }}"

      - name: just create a file
        template:
          dest: /var/www/cgi-bin/{{ rondomname }}
          owner: apache
          group: apache
          mode: '0755'
          src: "templates/sgi-bin.j2"

      - debug:
          msg: "useremailnotifications={{  useremailnotifications  }}"

      - name: "save hyperlinkname for remove later"
        set_stats:
          data:
            removehyperlinkfromtower: "{{ rondomname }}"

      - name: press to link for exam start
        mail:
          subject: "youre exam is ready"
          to: "{{ useremailnotifications }}"
          from: Li9 Demo <do-not-reply@demo.li9.com>
          body: |
            you have to press that link to exam start
            Your exam environment link will be auto-destroyed in "{{ timetolivehyperlink }}" mins.
            Your system will be auto-destroyed in "{{ examtime }}" mins after start (press link).
            Psease press link to start ===> http://tower.demo.li9.com:8080/cgi-bin/{{ rondomname }}

      - name: send an email  to user that cloudformation is done
        mail:
          subject: "Your Li9 Exam system is ready"
          to: "{{ useremailnotifications }}"
          from: Li9 Exam <do-not-reply@li9.com>
          subtype: html
          body: '
<h1>Before you begin</h1>

You need to be aware of the following rules:
All task results will be validates after system reboot

<h1>Task 1 - delete /data/deleteme</h1>
There is a simple file located at <b>/data/deleteme</b>. This file should be deleted

<h1>Task 2 - users and groups</h1>
You should configure the system as follows:
File /data/permissions exists
/data/permissions is owned by “examuser” user
/data/permissions is owned by “examgroup” group
User “examuser” is a member of “examgroup”
Only examuser has read write access to /data/permissions
No any other users are able to read or write to /data/permissions

<h1>Task 3 - LVM and filesystems</h1>
You should configure the system as follows:
Volume group named “examvg” exists
Volume group extent size is 2M
Logical volume named “vol1” exists
“vol1” belongs to the “examvg” volume group
Size is 200M
“vol1” is mounted at boot to /data/fs1 as EXT4 filesystem
Logical volume named “vol2” exists
“vol2” belongs to the “examvg” volume group
Size is 300M
“vol2” is mounted at boot to /data/fs1 as XFS filesystem

Note! This task may require to look for a free block device which is already attached to the exam  system.

<h1>Task 4 - Web server</h1>
Configure the exam system as an HTTP  web server as follows:
Service listens on 80 and 8080 ports
Commands “curl localhost”  and “curl localhost:8080” return “Li9 exam task 3”.

Note! You are allowed to use any web server software

<h1>Task 5 - NFS server</h1>
Configure your system as NFS server as follows:
NFS service exports /nfs_export  for anyone
/nfs_export is exported in RW mode
Any NFS user should have RW access to the share

Note! You are allowed to use any web server software


<h1>Task 6 - Script</h1>
Create a script with the following requirements:
It returns “Hello world” if no arguments passed
It returns “CentOS system” if the first argument is “centos”
It returns “Not a CentOS system” for any other options in the first argument
It should be executable for anyone

Note! You are allowed to use any programming language

<h1>Task 7 - Text</h1>
Create a new file named /etc/task7. The file should contain all lines with “abc” string  from /etc/services


<h1>Task 8 - Passwordless ssh access</h1>
Configure your system to allow passwordless access from a new user named “sshuser” to “examuser”.
Note! The following command under user “sshuser” should work fine “ssh examuser@examuser id”
          '