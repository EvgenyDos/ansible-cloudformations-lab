---
  - name:
    hosts: "{{ vmhostip }}"
    gather_facts: false
    tasks:

      - debug:
          msg:
            - "apachetestnumber is {{ apachetestnumber }}"
            - "attrtestnumber is {{ attrtestnumber }}"
            - "fstestnumber is {{ fstestnumber }}"
            - "greptestnumber is {{ greptestnumber }}"
            - "lvmtestnumber is {{ lvmtestnumber }}"
            - "nfstestnumber is {{ nfstestnumber }}"
            - "scripttestnumber is {{ scripttestnumber }}"
            - "sshtestnumber is {{ sshtestnumber }}"
            - "userstestnumber is {{ userstestnumber }}"
        when: testname == "linux"

      - shell: usermod -s /sbin/nologin {{ studentname }}
        when: testname == "linux"

      - reboot:
        when: testname == "linux"

      - name: Download installer of goss
        get_url:
          url: "https://goss.rocks/install"
          dest: "/root/install"
          force: yes
        when: testname == "linux"

      - shell: "chmod +x /root/install"
        when: testname == "linux"

      - shell: "/root/install"
        when: testname == "linux"

#      - name: copy main config file
#        copy:
#          dest: /root/goss.yaml
#          src: "files/goss.yaml"
#        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/scriptgoss.yaml
          src: "li9_exam_system/script/task{{ scripttestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/attrgoss.yaml
          src: "li9_exam_system/attr/task{{ attrtestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/sshgoss.yaml
          src: "li9_exam_system/ssh/task{{ sshtestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/usersgoss.yaml
          src: "li9_exam_system/users/task{{ userstestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/lvmgoss.yaml
          src: "li9_exam_system/lvm/task{{ lvmtestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/nfsgoss.yaml
          src: "li9_exam_system/nfs/task{{ nfstestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/grepgoss.yaml
          src: "li9_exam_system/grep/task{{ greptestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/apachegoss.yaml
          src: "li9_exam_system/apache/task{{ apachetestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/fsgoss.yaml
          src: "li9_exam_system/fs/task{{ fstestnumber }}/goss.yaml"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/goss-results.sh
          src: "files/goss-results.sh"
        when: testname == "linux"

      - name: copy main config file
        copy:
          dest: /root/goss-ssh-results.sh
          src: "files/goss-ssh-results.sh"
        when: testname == "linux"

      - shell: chmod +x /root/goss-results.sh
        when: testname == "linux"

      - shell: chmod +x /root/goss-ssh-results.sh
        when: testname == "linux"

      - shell: /root/goss-ssh-results.sh
        when: testname == "linux"

      - shell: /root/goss-results.sh
        when: testname == "linux"

      - shell: cat /root/results.txt
        ignore_errors: True
        register: bodymailreport
        when: testname == "linux"

      - name: send an email with results
        mail:
          subject: "Test results"
          to: "{{ adminemailnotifications }}"
          from: "{{ adminemailnotifications }}"
          body: "{{ bodymailreport.stdout }}"
        when: testname == "linux"

      - name: send an email  to user that cloudformation is done
        mail:
          subject: "Your exam-time has been ended."
          to: "{{ useremailnotifications }}"
          from: "{{ adminemailnotifications }}"
          body: |
            Your exam-time has been ended.
            We will check the results of exam and contact with you soon.
            Thanks for your time and have a nice day.
        when: testname == "linux"

      - name: Time for troubleshooting before full destroy
        shell: "sleep {{ waittimebeforedestroy }}"
        when: testname == "linux"